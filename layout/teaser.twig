<!DOCTYPE html>
<html class="h-100" lang="pt-BR" xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml" xmlns:og="http://opengraphprotocol.org/schema/">
	<head prefix="og: http://ogp.me/ns#">

		<meta charset="utf-8">
		<meta name="description" content="{{ page_description }}">
		<meta name="keywords" content="{{ page_keywords }}">
		<title>{{ page_title }}</title>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
		<meta property="og:type" content="website">
  		<meta property="og:title" content="{{ page_title }}">
  		<meta property="og:description" content="{{ page_description }}">
		<meta property="og:site_name" content="{{ shop.name }}">
		
		{% if template != 'product' and theme.settings.img_share %}
			{% set img_share = theme.settings.img_share %}
		{% else %}
			{% set img_share = product.image %}
		{% endif %}

		<meta property="og:image" content="{{ img_share | img_url }}">
  		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

		{% if theme.settings.favicon %}
			<link rel="icon" href="{{ theme.settings.favicon | img_url ('96x96') }}">
		{% endif %}

		{# custom fonts #}
			{% include 'fonts/fonts.twig' %}
		{# end custom fonts #}

		{% set fileTime = _getSettingsModifiedTime() %}
			
		{% if _get.preview %}
			{% set fileTime = date().timestamp %}
		{% endif %}

		{% set cssUrl = 'theme.css.compile?v=' ~ fileTime %}
		{{ cssUrl | assets_url | stylesheet_tag }}

		<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
		<link href="{{ 'doocaflags.css.compile' | assets_url }}" rel="stylesheet">
		<link href="{{ 'doocasocials.css.compile' | assets_url }}" rel="stylesheet">

		{% if theme.settings.custom_style_css %}
			<style>{{ theme.settings.custom_style_css | raw }}</style>
		{% endif %}

		<style>
			:root {
				--color-primary:  {{ theme.settings.color_primary }};
				--color-secondary: {{ theme.settings.color_secondary }};
				--color-border: {{ theme.settings.color_border }};
				--color-highlight: {{ theme.settings.color_highlight }};
				--color-buy-button: {{ theme.settings.color_button_buy }};
				--color-buy-button-text: {{ theme.settings.color_button_buy_text }};
				--color-text: {{ theme.settings.color_text }};
			}
		</style>
	</head>
	<body class="page page-{{ template }} h-100">
        {{ content_for_layout | raw }}

		<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js" charset="utf-8"></script>

		{# default scripts #}
			{% include 'scripts/owl.twig' %}
			{% include 'scripts/lazyload.twig' %}
			{% include 'scripts/countdown.twig' %}
			{% include 'scripts/smart-search.twig' %}
			{% include 'scripts/gallery.twig' %}
		{# end default #}

		{# delegate scripts #}
			{% include 'scripts/product-attributes.twig' %}
			{% include 'scripts/product-installments.twig' %}
			{% include 'scripts/app-size-guide.twig' %}
			{% include 'scripts/request.twig' %}
		{# end delegate #}

		{# dynamic scripts #}
			{% if theme.settings.product_image_hover %}
				{% include 'scripts/product-card.twig' %}
			{% endif %}
			{% if theme.settings.product_cart_add_redirect == 'not_redirect' %}
				{% include 'cart-redirect-modal.twig' %}
				{% include 'scripts/cart-add.twig' %}
			{% endif %}
			{% set product_button_type = theme.settings.product_buy_button_type ?: null %}
			{% if product_button_type and product_button_type != 'simple' %}
				{% include 'scripts/product-card-buy.twig' with { 'type': product_button_type } %}

				<div class="product-buy-loader">
					<span class="loader"></span>
				</div>
			{% endif %}
		{# end dynamic #}

		<div class="menu-dropdown-background"></div>

		{% javascript %}
			$(function() {
				$('.lazy').Lazy({});

				var changePage = function (ele) {
					var url = $(ele).val();
					window.location = url;
				};

				$('.change-page').on('change', function () {
					changePage(this);
				});

				window.getParamns = function(element) {
					var data = element.serializeArray().reduce(function (obj, item) {
						obj[item.name] = item.value;
						return obj;
					}, {});

					return data || null;
				};
			});
		{% endjavascript %}

		{{ 'js/dc-common.js' | dc_assets_url | script_tag }}
	</body>
</html>
